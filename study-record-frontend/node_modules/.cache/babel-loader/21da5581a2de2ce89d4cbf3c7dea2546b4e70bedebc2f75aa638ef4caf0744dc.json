{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\n// const record_sample: Record[] = [\n//   {\n//     id: \"record_1\",\n//     date: \"2024-03-01\",\n//     LearningContent: {\n//       id: \"LearningContent_1\",\n//       seq: 101,\n//       contentName: \"サンプル1\",\n//     },\n//     time: 10,\n//   },\n//   {\n//     id: \"record_2\",\n//     date: \"2024-03-02\",\n//     LearningContent: {\n//       id: \"LearningContent_2\",\n//       seq: 101,\n//       contentName: \"サンプル2\",\n//     },\n//     time: 20,\n//   },\n//   {\n//     id: \"record_3\",\n//     date: \"2024-03-03\",\n//     LearningContent: {\n//       id: \"LearningContent_3\",\n//       seq: 101,\n//       contentName: \"サンプル3\",\n//     },\n//     time: 30,\n//   },\n//   {\n//     id: \"record_4\",\n//     date: \"2024-03-04\",\n//     LearningContent: {\n//       id: \"LearningContent_4\",\n//       seq: 101,\n//       contentName: \"サンプル4\",\n//     },\n//     time: 40,\n//   },\n//   {\n//     id: \"record_5\",\n//     date: \"2024-03-05\",\n//     LearningContent: {\n//       id: \"LearningContent_5\",\n//       seq: 101,\n//       contentName: \"サンプル5\",\n//     },\n//     time: 50,\n//   },\n// ];\n\nexport function useRecord() {\n  _s();\n  const [records, setRecords] = useState([]);\n\n  // state初期化\n  useEffect(() => {\n    const getRecords = () => {\n      axios.get(\"http://127.0.0.1:8000/record\").then(res => {\n        console.debug(res);\n        setRecords(res.data);\n      }).catch(error => {\n        console.debug(\"データの取得に失敗しました:\", error);\n      });\n    };\n    getRecords();\n  }, []);\n  return {\n    records\n  };\n}\n_s(useRecord, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");","map":{"version":3,"names":["axios","useEffect","useState","useRecord","_s","records","setRecords","getRecords","get","then","res","console","debug","data","catch","error"],"sources":["D:/00_Engineer/90_tools/React/study-record/study-record/src/_hooks/useRecord.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { Record } from \"../_types/Record\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// const record_sample: Record[] = [\r\n//   {\r\n//     id: \"record_1\",\r\n//     date: \"2024-03-01\",\r\n//     LearningContent: {\r\n//       id: \"LearningContent_1\",\r\n//       seq: 101,\r\n//       contentName: \"サンプル1\",\r\n//     },\r\n//     time: 10,\r\n//   },\r\n//   {\r\n//     id: \"record_2\",\r\n//     date: \"2024-03-02\",\r\n//     LearningContent: {\r\n//       id: \"LearningContent_2\",\r\n//       seq: 101,\r\n//       contentName: \"サンプル2\",\r\n//     },\r\n//     time: 20,\r\n//   },\r\n//   {\r\n//     id: \"record_3\",\r\n//     date: \"2024-03-03\",\r\n//     LearningContent: {\r\n//       id: \"LearningContent_3\",\r\n//       seq: 101,\r\n//       contentName: \"サンプル3\",\r\n//     },\r\n//     time: 30,\r\n//   },\r\n//   {\r\n//     id: \"record_4\",\r\n//     date: \"2024-03-04\",\r\n//     LearningContent: {\r\n//       id: \"LearningContent_4\",\r\n//       seq: 101,\r\n//       contentName: \"サンプル4\",\r\n//     },\r\n//     time: 40,\r\n//   },\r\n//   {\r\n//     id: \"record_5\",\r\n//     date: \"2024-03-05\",\r\n//     LearningContent: {\r\n//       id: \"LearningContent_5\",\r\n//       seq: 101,\r\n//       contentName: \"サンプル5\",\r\n//     },\r\n//     time: 50,\r\n//   },\r\n// ];\r\n\r\nexport function useRecord() {\r\n  const [records, setRecords] = useState<Record[]>([]);\r\n\r\n  // state初期化\r\n  useEffect(() => {\r\n    const getRecords = () => {\r\n      axios\r\n        .get(\"http://127.0.0.1:8000/record\")\r\n        .then((res) => {\r\n          console.debug(res);\r\n          setRecords(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.debug(\"データの取得に失敗しました:\", error);\r\n        });\r\n    };\r\n\r\n    getRecords();\r\n  }, []);\r\n\r\n  return { records };\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAW,EAAE,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMM,UAAU,GAAGA,CAAA,KAAM;MACvBP,KAAK,CACFQ,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBJ,UAAU,CAACI,GAAG,CAACG,IAAI,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEG,KAAK,CAAC;MACxC,CAAC,CAAC;IACN,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEF;EAAQ,CAAC;AACpB;AAACD,EAAA,CArBeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}