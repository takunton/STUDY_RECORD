{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst content_sample = [{\n  id: \"LearningContent_1\",\n  seq: 101,\n  contentName: \"サンプル1\"\n}, {\n  id: \"LearningContent_2\",\n  seq: 102,\n  contentName: \"サンプル2\"\n}, {\n  id: \"LearningContent_3\",\n  seq: 103,\n  contentName: \"サンプル3\"\n}, {\n  id: \"LearningContent_4\",\n  seq: 104,\n  contentName: \"サンプル4\"\n}, {\n  id: \"LearningContent_5\",\n  seq: 105,\n  contentName: \"サンプル5\"\n}];\nexport function useLearningContent() {\n  _s();\n  const [learningContents, seLearningContents] = useState([]);\n\n  // state初期化\n  useEffect(() => {\n    const getLearningContents = () => {\n      axios.get(\"http://127.0.0.1:8000//learning-content\").then(res => {\n        console.debug(res);\n        setRecords(res.data);\n      }).catch(error => {\n        console.debug(\"データの取得に失敗しました:\", error);\n      });\n    };\n    getRecords();\n  }, []);\n  return {\n    learningContents\n  };\n}\n_s(useLearningContent, \"NqtzTaEMQWqF9uzQMfJrVHFWsgQ=\");","map":{"version":3,"names":["useEffect","useState","axios","content_sample","id","seq","contentName","useLearningContent","_s","learningContents","seLearningContents","getLearningContents","get","then","res","console","debug","setRecords","data","catch","error","getRecords"],"sources":["D:/00_Engineer/90_tools/STUDY-RECORD/study-record-frontend/src/_hooks/useLearningContent.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { LearningContent } from \"../_types/LearningContent\";\r\nimport axios from \"axios\";\r\n\r\nconst content_sample: LearningContent[] = [\r\n  { id: \"LearningContent_1\", seq: 101, contentName: \"サンプル1\" },\r\n  { id: \"LearningContent_2\", seq: 102, contentName: \"サンプル2\" },\r\n  { id: \"LearningContent_3\", seq: 103, contentName: \"サンプル3\" },\r\n  { id: \"LearningContent_4\", seq: 104, contentName: \"サンプル4\" },\r\n  { id: \"LearningContent_5\", seq: 105, contentName: \"サンプル5\" },\r\n];\r\n\r\nexport function useLearningContent() {\r\n  const [learningContents, seLearningContents] = useState<LearningContent[]>(\r\n    []\r\n  );\r\n\r\n  // state初期化\r\n  useEffect(() => {\r\n    const getLearningContents = () => {\r\n      axios\r\n        .get<Array<LearningContent>>(\"http://127.0.0.1:8000//learning-content\")\r\n        .then((res) => {\r\n          console.debug(res);\r\n          setRecords(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.debug(\"データの取得に失敗しました:\", error);\r\n        });\r\n    };\r\n\r\n    getRecords();\r\n  }, []);\r\n  return { learningContents };\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAiC,GAAG,CACxC;EAAEC,EAAE,EAAE,mBAAmB;EAAEC,GAAG,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC3D;EAAEF,EAAE,EAAE,mBAAmB;EAAEC,GAAG,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC3D;EAAEF,EAAE,EAAE,mBAAmB;EAAEC,GAAG,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC3D;EAAEF,EAAE,EAAE,mBAAmB;EAAEC,GAAG,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC3D;EAAEF,EAAE,EAAE,mBAAmB;EAAEC,GAAG,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,CAC5D;AAED,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CACrD,EACF,CAAC;;EAED;EACAD,SAAS,CAAC,MAAM;IACd,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;MAChCT,KAAK,CACFU,GAAG,CAAyB,yCAAyC,CAAC,CACtEC,IAAI,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBG,UAAU,CAACH,GAAG,CAACI,IAAI,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBL,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEI,KAAK,CAAC;MACxC,CAAC,CAAC;IACN,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEZ;EAAiB,CAAC;AAC7B;AAACD,EAAA,CAtBeD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}