{"ast":null,"code":"var _jsxFileName = \"D:\\\\00_Engineer\\\\90_tools\\\\React\\\\study-record\\\\study-record\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from \"@fullcalendar/list\";\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"./theme/theme\";\nimport { useState } from \"react\";\nimport { RecordModal } from \"./app/carendar/RecordModal\";\nimport { useRecord } from \"./_hooks/useRecord\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  // 記録リスト\n  const {\n    records\n  } = useRecord();\n\n  // モーダルのモード\n  const [isNew, setIsNew] = useState(false);\n\n  // モーダルの状態\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n\n  // 記録リストをeventオブジェクトに変換\n  // const events: EventSourceInput = records.map((record) => ({\n  //   title:``\n  // start:\n  // }));\n\n  // イベントのフォーマット\n  const renderEventContent = eventInfo => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: eventInfo === null || eventInfo === void 0 ? void 0 : eventInfo.timeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: eventInfo === null || eventInfo === void 0 ? void 0 : eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  // 日付クリック\n  const handleDateClick = arg => {\n    setIsNew(true);\n    onOpen();\n  };\n\n  // イベントクリック\n  const eventClick = arg => {\n    setIsNew(false);\n    onOpen();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        locale: \"ja\",\n        plugins: [dayGridPlugin, interactionPlugin, listPlugin],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth listWeek\" // 追加\n        },\n        dateClick: handleDateClick,\n        eventContent: renderEventContent,\n        initialView: \"dayGridMonth\",\n        eventClick: eventClick,\n        events: [{\n          title: \"3h プログラム\",\n          start: \"2024-03-21\",\n          backgroundColor: \"red\"\n        }, {\n          title: \"2h 読書\",\n          start: \"2024-03-21\"\n        }]\n        // events={events}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecordModal, {\n        isNew: isNew,\n        isOpen: isOpen,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"GePeWvKgiKFM8kURCrFNZJkvCEY=\", false, function () {\n  return [useRecord, useDisclosure];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["FullCalendar","dayGridPlugin","interactionPlugin","listPlugin","ChakraProvider","useDisclosure","theme","useState","RecordModal","useRecord","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","records","isNew","setIsNew","isOpen","onOpen","onClose","renderEventContent","eventInfo","children","timeText","fileName","_jsxFileName","lineNumber","columnNumber","event","title","handleDateClick","arg","eventClick","locale","plugins","headerToolbar","left","center","right","dateClick","eventContent","initialView","events","start","backgroundColor","_c","$RefreshReg$"],"sources":["D:/00_Engineer/90_tools/React/study-record/study-record/src/App.tsx"],"sourcesContent":["import FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport {\n  EventClickArg,\n  EventContentArg,\n  EventSourceInput,\n} from \"@fullcalendar/core\";\nimport listPlugin from \"@fullcalendar/list\";\n\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"./theme/theme\";\nimport { useState } from \"react\";\nimport { RecordModal } from \"./app/carendar/RecordModal\";\nimport { useRecord } from \"./_hooks/useRecord\";\n\nexport const App = () => {\n  // 記録リスト\n  const { records } = useRecord();\n\n  // モーダルのモード\n  const [isNew, setIsNew] = useState(false);\n\n  // モーダルの状態\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // 記録リストをeventオブジェクトに変換\n  // const events: EventSourceInput = records.map((record) => ({\n  //   title:``\n  // start:\n  // }));\n\n  // イベントのフォーマット\n  const renderEventContent = (eventInfo: EventContentArg) => {\n    return (\n      <>\n        <b>{eventInfo?.timeText}</b>\n        <i>{eventInfo?.event.title}</i>\n      </>\n    );\n  };\n\n  // 日付クリック\n  const handleDateClick = (arg: DateClickArg) => {\n    setIsNew(true);\n    onOpen();\n  };\n\n  // イベントクリック\n  const eventClick = (arg: EventClickArg) => {\n    setIsNew(false);\n    onOpen();\n  };\n\n  return (\n    <>\n      <ChakraProvider theme={theme}>\n        <FullCalendar\n          locale=\"ja\"\n          plugins={[dayGridPlugin, interactionPlugin, listPlugin]}\n          headerToolbar={{\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth listWeek\", // 追加\n          }}\n          dateClick={handleDateClick}\n          eventContent={renderEventContent}\n          initialView=\"dayGridMonth\"\n          eventClick={eventClick}\n          events={[\n            {\n              title: \"3h プログラム\",\n              start: \"2024-03-21\",\n              backgroundColor: \"red\",\n            },\n            {\n              title: \"2h 読書\",\n              start: \"2024-03-21\",\n            },\n          ]}\n          // events={events}\n        />\n        <RecordModal\n          isNew={isNew}\n          isOpen={isOpen}\n          onClose={onClose}\n        ></RecordModal>\n      </ChakraProvider>\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}