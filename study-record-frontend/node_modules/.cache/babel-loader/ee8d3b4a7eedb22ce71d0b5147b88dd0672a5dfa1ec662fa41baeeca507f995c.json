{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst record_sample = [{\n  id: \"record_1\",\n  date: \"2024-03-01\",\n  LearningContent: {\n    id: \"LearningContent_1\",\n    seq: 101,\n    contentName: \"サンプル1\"\n  },\n  time: 10\n}, {\n  id: \"record_2\",\n  date: \"2024-03-02\",\n  LearningContent: {\n    id: \"LearningContent_2\",\n    seq: 101,\n    contentName: \"サンプル2\"\n  },\n  time: 20\n}, {\n  id: \"record_3\",\n  date: \"2024-03-03\",\n  LearningContent: {\n    id: \"LearningContent_3\",\n    seq: 101,\n    contentName: \"サンプル3\"\n  },\n  time: 30\n}, {\n  id: \"record_4\",\n  date: \"2024-03-04\",\n  LearningContent: {\n    id: \"LearningContent_4\",\n    seq: 101,\n    contentName: \"サンプル4\"\n  },\n  time: 40\n}, {\n  id: \"record_5\",\n  date: \"2024-03-05\",\n  LearningContent: {\n    id: \"LearningContent_5\",\n    seq: 101,\n    contentName: \"サンプル5\"\n  },\n  time: 50\n}];\nexport function useRecord() {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    // state初期化\n    const getRecords = () => {\n      axios.get(\"http://127.0.0.1:8000/record\").then(res => {\n        setRecords(res.data);\n      }).catch(error => {\n        console.error(\"データの取得に失敗しました:\", error);\n      });\n    };\n    getRecords(); // コンポーネントのマウント時にAPIを呼び出す\n  }, []); // 空の依存配列を渡して、コンポーネントのマウント時にのみ実行するようにする\n\n  return {\n    records\n  };\n}\n_s(useRecord, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");","map":{"version":3,"names":["axios","useEffect","useState","record_sample","id","date","LearningContent","seq","contentName","time","useRecord","_s","records","setRecords","getRecords","get","then","res","data","catch","error","console"],"sources":["D:/00_Engineer/90_tools/React/study-record/study-record/src/_hooks/useRecord.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { Record } from \"../_types/Record\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst record_sample: Record[] = [\r\n  {\r\n    id: \"record_1\",\r\n    date: \"2024-03-01\",\r\n    LearningContent: {\r\n      id: \"LearningContent_1\",\r\n      seq: 101,\r\n      contentName: \"サンプル1\",\r\n    },\r\n    time: 10,\r\n  },\r\n  {\r\n    id: \"record_2\",\r\n    date: \"2024-03-02\",\r\n    LearningContent: {\r\n      id: \"LearningContent_2\",\r\n      seq: 101,\r\n      contentName: \"サンプル2\",\r\n    },\r\n    time: 20,\r\n  },\r\n  {\r\n    id: \"record_3\",\r\n    date: \"2024-03-03\",\r\n    LearningContent: {\r\n      id: \"LearningContent_3\",\r\n      seq: 101,\r\n      contentName: \"サンプル3\",\r\n    },\r\n    time: 30,\r\n  },\r\n  {\r\n    id: \"record_4\",\r\n    date: \"2024-03-04\",\r\n    LearningContent: {\r\n      id: \"LearningContent_4\",\r\n      seq: 101,\r\n      contentName: \"サンプル4\",\r\n    },\r\n    time: 40,\r\n  },\r\n  {\r\n    id: \"record_5\",\r\n    date: \"2024-03-05\",\r\n    LearningContent: {\r\n      id: \"LearningContent_5\",\r\n      seq: 101,\r\n      contentName: \"サンプル5\",\r\n    },\r\n    time: 50,\r\n  },\r\n];\r\n\r\nexport function useRecord() {\r\n  const [records, setRecords] = useState<Record[]>([]);\r\n\r\n  useEffect(() => {\r\n    // state初期化\r\n    const getRecords = () => {\r\n      axios\r\n        .get<Array<Record>>(\"http://127.0.0.1:8000/record\")\r\n        .then((res) => {\r\n          setRecords(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"データの取得に失敗しました:\", error);\r\n        });\r\n    };\r\n\r\n    getRecords(); // コンポーネントのマウント時にAPIを呼び出す\r\n  }, []); // 空の依存配列を渡して、コンポーネントのマウント時にのみ実行するようにする\r\n\r\n  return { records };\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,aAAuB,GAAG,CAC9B;EACEC,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,YAAY;EAClBC,eAAe,EAAE;IACfF,EAAE,EAAE,mBAAmB;IACvBG,GAAG,EAAE,GAAG;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;AACR,CAAC,EACD;EACEL,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,YAAY;EAClBC,eAAe,EAAE;IACfF,EAAE,EAAE,mBAAmB;IACvBG,GAAG,EAAE,GAAG;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;AACR,CAAC,EACD;EACEL,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,YAAY;EAClBC,eAAe,EAAE;IACfF,EAAE,EAAE,mBAAmB;IACvBG,GAAG,EAAE,GAAG;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;AACR,CAAC,EACD;EACEL,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,YAAY;EAClBC,eAAe,EAAE;IACfF,EAAE,EAAE,mBAAmB;IACvBG,GAAG,EAAE,GAAG;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;AACR,CAAC,EACD;EACEL,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,YAAY;EAClBC,eAAe,EAAE;IACfF,EAAE,EAAE,mBAAmB;IACvBG,GAAG,EAAE,GAAG;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;AACR,CAAC,CACF;AAED,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGA,CAAA,KAAM;MACvBd,KAAK,CACFe,GAAG,CAAgB,8BAA8B,CAAC,CAClDC,IAAI,CAAEC,GAAG,IAAK;QACbJ,UAAU,CAACI,GAAG,CAACC,IAAI,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC,CAAC,CAAC;IACN,CAAC;IAEDN,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IAAEF;EAAQ,CAAC;AACpB;AAACD,EAAA,CApBeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}